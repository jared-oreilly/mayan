package oreilly;

import java.io.IOException;
import javax.swing.JOptionPane;

public class GraphUI extends javax.swing.JFrame
{

    Graph graph;

    public GraphUI()
    {
        graph = new Graph("http://tagsuatappservice.azurewebsites.net");
        initComponents();
        updateDisplays();
    }

    public GraphUI(String filename) throws IOException
    {
        graph = new Graph("");
        graph.importGraph(filename);

        initComponents();

        updateDisplays();
        txfFilename.setText(filename.substring(0, filename.length() - 5));
        txfMayan.setText(filename.substring(0, filename.length() - 5));

    }

    public void updateGraphConfig(Graph other)
    {
        graph.setBaseUrl(other.getBaseUrl());
        graph.addPhaseMain(other.getLastDurMain(), other.getLastArrMain());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        lblAddNode = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        lblURL = new javax.swing.JLabel();
        lblType = new javax.swing.JLabel();
        lblCookie = new javax.swing.JLabel();
        lblJSON = new javax.swing.JLabel();
        lblForm = new javax.swing.JLabel();
        txfCookie = new javax.swing.JTextField();
        txfJSON = new javax.swing.JTextField();
        txfURL = new javax.swing.JTextField();
        txfTitleNode = new javax.swing.JTextField();
        txfForm = new javax.swing.JTextField();
        btnAddNode = new javax.swing.JButton();
        lblProb = new javax.swing.JLabel();
        txfStart = new javax.swing.JTextField();
        txfProb = new javax.swing.JTextField();
        txfTitleEdge = new javax.swing.JTextField();
        txfEnd = new javax.swing.JTextField();
        btnAddEdge = new javax.swing.JButton();
        lblAddAction = new javax.swing.JLabel();
        lblTitleAction = new javax.swing.JLabel();
        lblStartID = new javax.swing.JLabel();
        lblEndID = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaEdges = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txaNodes = new javax.swing.JTextArea();
        btnConfig = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        lbljson = new javax.swing.JLabel();
        txfFilename = new javax.swing.JTextField();
        txfMayan = new javax.swing.JTextField();
        lbltxt = new javax.swing.JLabel();
        cbxType = new javax.swing.JComboBox<>();
        lblTitleFeedback = new javax.swing.JLabel();
        lblURLFeedback = new javax.swing.JLabel();
        lblCookieFeedback = new javax.swing.JLabel();
        lblJSONFeedback = new javax.swing.JLabel();
        lblFormFeedback = new javax.swing.JLabel();
        lblTitleActionFeedback = new javax.swing.JLabel();
        lblProbFeedback = new javax.swing.JLabel();
        lblStartIDFeedback = new javax.swing.JLabel();
        lblEndIDFeedback = new javax.swing.JLabel();
        lblTypeFeedback = new javax.swing.JLabel();
        lblUpdateNode = new javax.swing.JLabel();
        lblNodeIDSelect = new javax.swing.JLabel();
        cbxNodeIDSelect = new javax.swing.JComboBox<>();
        lblNodeFieldSelect = new javax.swing.JLabel();
        cbNodeFieldSelect = new javax.swing.JComboBox<>();
        lblNodeNewValue = new javax.swing.JLabel();
        txfNodeNewValue = new javax.swing.JTextField();
        btnUpdateNode = new javax.swing.JButton();
        lblUpdateEdge = new javax.swing.JLabel();
        lblEdgeIDSelect = new javax.swing.JLabel();
        cbxEdgeIDSelect = new javax.swing.JComboBox<>();
        lblFieldSelect1 = new javax.swing.JLabel();
        cbxEdgeFieldSelect = new javax.swing.JComboBox<>();
        lblEdgeNewValue = new javax.swing.JLabel();
        txfEdgeNewValue = new javax.swing.JTextField();
        btnUpdateEdge = new javax.swing.JButton();
        lblActionFeedback = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnMA = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Mayan - Create Graph");
        setBackground(new java.awt.Color(0, 204, 0));
        setForeground(new java.awt.Color(0, 204, 0));

        lblAddNode.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAddNode.setText("Add Webpage/Request");

        lblTitle.setText("Title");

        lblURL.setText("URL");

        lblType.setText("Type ");

        lblCookie.setText("Cookie");

        lblJSON.setText("JSON");

        lblForm.setText("Form ");

        btnAddNode.setText("Add");
        btnAddNode.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnAddNodeActionPerformed(evt);
            }
        });

        lblProb.setText("Prob ");

        txfStart.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyReleased(java.awt.event.KeyEvent evt)
            {
                fetchProb(evt);
            }
        });

        btnAddEdge.setText("Add");
        btnAddEdge.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnAddEdgeActionPerformed(evt);
            }
        });

        lblAddAction.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAddAction.setText("Add Action/Link");

        lblTitleAction.setText("Title");

        lblStartID.setText("StartID");

        lblEndID.setText("EndID");

        txaEdges.setColumns(20);
        txaEdges.setRows(5);
        jScrollPane1.setViewportView(txaEdges);

        txaNodes.setColumns(20);
        txaNodes.setRows(5);
        jScrollPane2.setViewportView(txaNodes);

        btnConfig.setText("Config");
        btnConfig.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnConfigActionPerformed(evt);
            }
        });

        btnSave.setText("Save Graph");
        btnSave.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnSaveActionPerformed(evt);
            }
        });

        lbljson.setText(".json");

        lbltxt.setText(".txt");

        cbxType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "GET", "POST" }));
        cbxType.setPreferredSize(new java.awt.Dimension(6, 20));

        lblUpdateNode.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUpdateNode.setText("Update Webpage/Request");

        lblNodeIDSelect.setText("ID");

        lblNodeFieldSelect.setText("Field");

        cbNodeFieldSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Title", "URL", "Type", "Cookie", "JSON", "Form" }));

        lblNodeNewValue.setText("New");

        btnUpdateNode.setText("Update");
        btnUpdateNode.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnUpdateNodeActionPerformed(evt);
            }
        });

        lblUpdateEdge.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUpdateEdge.setText("Update Action/Link");

        lblEdgeIDSelect.setText("ID");

        lblFieldSelect1.setText("Field");

        cbxEdgeFieldSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Title", "StartID", "EndID", "Prob" }));
        cbxEdgeFieldSelect.setToolTipText("");

        lblEdgeNewValue.setText("New");

        btnUpdateEdge.setText("Update");
        btnUpdateEdge.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnUpdateEdgeActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("MAYAN GRAPH");

        btnMA.setText("Mayan Artillery");
        btnMA.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnMAActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblAddNode, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(86, 86, 86))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnUpdateNode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblNodeFieldSelect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblNodeNewValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbNodeFieldSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txfNodeNewValue, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(btnAddNode, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGap(3, 3, 3)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblForm)
                                        .addComponent(lblCookie)
                                        .addComponent(lblTitle)
                                        .addComponent(lblURL)
                                        .addComponent(lblType)
                                        .addComponent(lblJSON))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txfURL, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(cbxType, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txfCookie, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txfTitleNode)
                                        .addComponent(txfJSON, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txfForm, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblTypeFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblTitleFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblURLFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblCookieFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblJSONFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblFormFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblNodeIDSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(26, 26, 26)
                            .addComponent(cbxNodeIDSelect, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(lblUpdateNode, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblAddAction, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblProb)
                                    .addComponent(lblEndID)
                                    .addComponent(lblStartID)
                                    .addComponent(lblTitleAction))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txfTitleEdge, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txfProb)
                                        .addComponent(txfEnd, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txfStart, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblTitleActionFeedback, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblStartIDFeedback, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblProbFeedback, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblEndIDFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btnUpdateEdge, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(lblEdgeNewValue)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txfEdgeNewValue, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblFieldSelect1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxEdgeFieldSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(lblActionFeedback, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblUpdateEdge, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAddEdge, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblEdgeIDSelect)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                            .addComponent(cbxEdgeIDSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(49, 49, 49))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txfFilename, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbljson)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnConfig))
                            .addComponent(jScrollPane2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnMA)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txfMayan)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbltxt, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblAddNode)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblTitleFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblTitle)
                                        .addComponent(txfTitleNode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblURLFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblURL)
                                        .addComponent(txfURL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblType)
                                    .addComponent(cbxType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblTypeFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblCookie)
                                        .addComponent(txfCookie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lblCookieFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblJSON)
                                        .addComponent(txfJSON, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lblJSONFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblForm)
                                    .addComponent(txfForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(lblFormFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddNode)
                        .addGap(18, 18, 18)
                        .addComponent(lblUpdateNode)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNodeIDSelect)
                            .addComponent(cbxNodeIDSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNodeFieldSelect)
                            .addComponent(cbNodeFieldSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNodeNewValue)
                            .addComponent(txfNodeNewValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdateNode))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblTitleAction)
                                        .addComponent(txfTitleEdge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lblTitleActionFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblStartID)
                                        .addComponent(txfStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lblStartIDFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblEndIDFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblEndID)
                                        .addComponent(txfEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblProb)
                                        .addComponent(txfProb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lblProbFeedback, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblActionFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblAddAction))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddEdge)
                        .addGap(18, 18, 18)
                        .addComponent(lblUpdateEdge)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEdgeIDSelect)
                            .addComponent(cbxEdgeIDSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFieldSelect1)
                            .addComponent(cbxEdgeFieldSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txfEdgeNewValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEdgeNewValue))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdateEdge)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConfig)
                    .addComponent(btnSave)
                    .addComponent(lbljson)
                    .addComponent(txfFilename, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txfMayan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbltxt)
                    .addComponent(btnMA))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddNodeActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnAddNodeActionPerformed
    {//GEN-HEADEREND:event_btnAddNodeActionPerformed
        boolean submit = true;
        //Title
        String title = txfTitleNode.getText().trim();
        String type = (cbxType.getSelectedItem() + "");
        if (title.equals(""))
        {
            lblTitleFeedback.setText("Required!");
            submit = false;
        } else
        {
            lblTitleFeedback.setText("");
            lblTypeFeedback.setText("");
        }
        //URL
        if (txfURL.getText().trim().equals(""))
        {
            lblURLFeedback.setText("Required!");
            submit = false;
        } else
        {
            lblURLFeedback.setText("");
        }

        if (submit && graph.nodeTaken(title, type))
        {
            lblTitleFeedback.setText("Taken!");
            lblTypeFeedback.setText("Taken!");
            submit = false;
        }

        if (submit)
        {
            if ((cbxType.getSelectedItem() + "").equals("POST"))
            {
                title = txfTitleNode.getText();
                String URL = txfURL.getText();
                type = (cbxType.getSelectedItem() + "");
                String cookie = txfCookie.getText();
                String JSON = txfJSON.getText();
                if (JSON.equals(""))
                {
                    JSON = null;
                }
                String form = txfForm.getText();
                if (form.equals(""))
                {
                    form = null;
                }
                graph.addNode(title, URL, type, cookie, JSON, form);
            } else if ((cbxType.getSelectedItem() + "").equals("GET"))
            {
                title = txfTitleNode.getText();
                String URL = txfURL.getText();
                type = (cbxType.getSelectedItem() + "");
                String cookie = txfCookie.getText();
                graph.addNode(title, URL, type, cookie);
            }
            updateDisplays();
        } else
        {

        }
    }//GEN-LAST:event_btnAddNodeActionPerformed

    private void btnAddEdgeActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnAddEdgeActionPerformed
    {//GEN-HEADEREND:event_btnAddEdgeActionPerformed
        //do validation on edge fields
        boolean submit = true;
        String title = txfTitleEdge.getText().trim();
        String startID = txfStart.getText().trim();
        String endID = txfEnd.getText().trim();
        String prob = txfProb.getText().trim();
        //Title
        if (title.equals(""))
        {
            lblTitleActionFeedback.setText("Required!");
            submit = false;
        } else
        {
            lblTitleActionFeedback.setText("");
        }
        //StartID
        if (startID.equals(""))
        {
            lblStartIDFeedback.setText("Required!");
            submit = false;
        } else
        {
            lblStartIDFeedback.setText("");
        }
        //EndID
        if (endID.equals(""))
        {
            lblEndIDFeedback.setText("Required!");
            submit = false;
        } else
        {
            lblEndIDFeedback.setText("");
        }
        //Prob
        if (prob.equals(""))
        {
            lblProbFeedback.setText("Required!");
            submit = false;
        } else
        {
            lblProbFeedback.setText("");
        }

        if (submit && graph.edgeTaken(title, startID, endID))
        {
            lblTitleActionFeedback.setText("Taken!");
            lblStartIDFeedback.setText("Taken!");
            lblEndIDFeedback.setText("Taken!");
            submit = false;
        }

        if (submit)
        {
            title = txfTitleEdge.getText();
            int startIDInt = Integer.parseInt(txfStart.getText());
            int endIDInt = Integer.parseInt(txfEnd.getText());
            double probDouble = Double.parseDouble(txfProb.getText());
            graph.addEdge(title, startIDInt, endIDInt, probDouble);

            updateDisplays();

            String startIDText = txfStart.getText();
            int startIDTextInt = Integer.parseInt(startIDText);
            double remainingProb = graph.fetchRemainingProb(startIDTextInt);
            if (remainingProb != 0)
            {
                txfProb.setEnabled(true);

            } else
            {
                txfProb.setText("");
                txfProb.setEnabled(false);
            }
            lblProbFeedback.setText("<=" + remainingProb + "");

            lblActionFeedback.setText("");

        } else
        {

        }
    }//GEN-LAST:event_btnAddEdgeActionPerformed

    private void btnConfigActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnConfigActionPerformed
    {//GEN-HEADEREND:event_btnConfigActionPerformed
        new ConfigUI(graph).setVisible(true);
    }//GEN-LAST:event_btnConfigActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnSaveActionPerformed
    {//GEN-HEADEREND:event_btnSaveActionPerformed
        graph.exportGraph(txfFilename.getText() + ".json");
        JOptionPane.showMessageDialog(null, txfFilename.getText() + ".json saved!");
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnUpdateNodeActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnUpdateNodeActionPerformed
    {//GEN-HEADEREND:event_btnUpdateNodeActionPerformed
        if (cbxNodeIDSelect.getSelectedItem() != null)
        {
            int nodeID = Integer.parseInt(cbxNodeIDSelect.getSelectedItem() + "");
            switch (cbNodeFieldSelect.getSelectedItem() + "")
            {
                case "Title":
                    if (!txfNodeNewValue.getText().trim().equals(""))
                    {
                        graph.getNode(nodeID).setTitle(txfNodeNewValue.getText().trim());
                    } else
                    {
                        JOptionPane.showMessageDialog(null, "A value must be present for this field!");
                    }
                    break;
                case "URL":
                    if (!txfNodeNewValue.getText().trim().equals(""))
                    {
                        graph.getNode(nodeID).setUrl(txfNodeNewValue.getText().trim());
                    } else
                    {
                        JOptionPane.showMessageDialog(null, "A value must be present for this field!");
                    }
                    break;
                case "Type":
                    if (!txfNodeNewValue.getText().trim().equals(""))
                    {
                        graph.getNode(nodeID).setType(txfNodeNewValue.getText().trim());
                    } else
                    {
                        JOptionPane.showMessageDialog(null, "A value must be present for this field!");
                    }
                    break;
                case "Cookie":
                    graph.getNode(nodeID).setCookie(txfNodeNewValue.getText().trim());
                    break;
                case "JSON":
                    graph.getNode(nodeID).setJson(txfNodeNewValue.getText().trim());
                    break;
                case "Form":
                    graph.getNode(nodeID).setFormData(txfNodeNewValue.getText().trim());
                    break;
            }
            updateDisplays();
        } else
        {
            JOptionPane.showMessageDialog(null, "No node ID selected!");
        }


    }//GEN-LAST:event_btnUpdateNodeActionPerformed

    private void btnUpdateEdgeActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnUpdateEdgeActionPerformed
    {//GEN-HEADEREND:event_btnUpdateEdgeActionPerformed
        if (cbxEdgeIDSelect.getSelectedItem() != null)
        {
            int edgeID = Integer.parseInt(cbxEdgeIDSelect.getSelectedItem() + "");
            switch (cbxEdgeFieldSelect.getSelectedItem() + "")
            {
                case "Title":
                    if (!txfEdgeNewValue.getText().trim().equals(""))
                    {
                        graph.getEdge(edgeID).setTitle(txfEdgeNewValue.getText().trim());
                    } else
                    {
                        JOptionPane.showMessageDialog(null, "A value must be present for this field!");
                    }
                    break;
                case "StartID":
                    if (!txfEdgeNewValue.getText().trim().equals(""))
                    {
                        graph.getEdge(edgeID).setStart(graph.getNode(Integer.parseInt(txfEdgeNewValue.getText().trim())));
                    } else
                    {
                        JOptionPane.showMessageDialog(null, "A value must be present for this field!");
                    }
                    break;
                case "EndID":
                    if (!txfEdgeNewValue.getText().trim().equals(""))
                    {
                        graph.getEdge(edgeID).setEnd(graph.getNode(Integer.parseInt(txfEdgeNewValue.getText().trim())));
                    } else
                    {
                        JOptionPane.showMessageDialog(null, "A value must be present for this field!");
                    }
                    break;
                case "Prob":
                    if (!txfEdgeNewValue.getText().trim().equals(""))
                    {
                        graph.getEdge(edgeID).setProb(Double.parseDouble(txfEdgeNewValue.getText().trim()));
                    } else
                    {
                        JOptionPane.showMessageDialog(null, "A value must be present for this field!");
                    }
                    break;

            }
            updateDisplays();
        } else
        {
            JOptionPane.showMessageDialog(null, "No edge ID selected!");
        }
    }//GEN-LAST:event_btnUpdateEdgeActionPerformed

    private void fetchProb(java.awt.event.KeyEvent evt)//GEN-FIRST:event_fetchProb
    {//GEN-HEADEREND:event_fetchProb
        try
        {
            String startIDText = txfStart.getText();
            int startIDTextInt = Integer.parseInt(startIDText);
            double remainingProb = graph.fetchRemainingProb(startIDTextInt);
            if (remainingProb != 0.0)
            {
                txfProb.setEnabled(true);

            } else
            {
                txfProb.setText("");
                txfProb.setEnabled(false);
            }
            lblProbFeedback.setText("<=" + remainingProb + "");
            lblActionFeedback.setText("");
        } catch (IndexOutOfBoundsException e)
        {
            lblActionFeedback.setText("Invalid start ID!");
        } catch (NumberFormatException e)
        {
            lblProbFeedback.setText("");
            lblActionFeedback.setText("");
        }
    }//GEN-LAST:event_fetchProb

    private void btnMAActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnMAActionPerformed
    {//GEN-HEADEREND:event_btnMAActionPerformed
        String mayanArtillery = graph.mayanArtillery(txfMayan.getText() + ".txt");
        JOptionPane.showMessageDialog(null, txfMayan.getText() + ".txt generated!");
        
        boolean runMain, runSingle, runAverages;
        
        int choice1 = JOptionPane.showConfirmDialog(null, "Would you like to run the main " + txfMayan.getText() + " file on Artillery (" + graph.requestTotalMainTime() + ")?");
        switch (choice1)
        {
            case JOptionPane.YES_OPTION:
                runMain = true;
                break;
            default:
                runMain = false;

        }
        
        int choice2 = JOptionPane.showConfirmDialog(null, "Would you like to run the single scenario tests (" + graph.requestTotalSingleTime() + ")?");
        switch (choice2)
        {
            case JOptionPane.YES_OPTION:
                runSingle = true;
                
                int choice3 = JOptionPane.showConfirmDialog(null, "For the singles, averages of 3 (" + (graph.requestTotalSingleTime(true)) + ")?");
                switch (choice3)
                {
                    case JOptionPane.YES_OPTION:
                        runAverages = true;
                        break;
                    default:
                        runAverages = false;
                }
                
                break;
            default:
                runSingle = false;
                runAverages = false;
        }

        graph.runArtillery(mayanArtillery, txfMayan.getText() + ".txt", runMain, runSingle, runAverages);

        if (runMain)
        {
            if (runSingle)
            {
                JOptionPane.showMessageDialog(null, "The main " + txfMayan.getText() + " file and single tests have been run on Artillery successfully!");
            } else
            {
                JOptionPane.showMessageDialog(null, "The main " + txfMayan.getText() + " file has been run on Artillery successfully!");
            }
        } else
        {
            if (runSingle)
            {
                JOptionPane.showMessageDialog(null, "The single tests have been run on Artillery successfully!");
            } else
            {
                JOptionPane.showMessageDialog(null, "Nothing has been run on Artillery!");
            }
        }

        int choice4 = JOptionPane.showConfirmDialog(null, "Would you like to exit Mayan?");
        switch (choice4)
        {
            case JOptionPane.YES_OPTION:
                System.exit(0);
                break;
            default:
        }
    }//GEN-LAST:event_btnMAActionPerformed

    private void updateDisplays()
    {
        updateNodesDisplay();
        updateEdgesDisplay();
    }

    private void updateNodesDisplay()
    {
        txaNodes.setText(graph.printNodes());
        int old = cbxNodeIDSelect.getSelectedIndex();
        cbxNodeIDSelect.removeAllItems();
        int[] nodeIDs = graph.getNodeIDs();
        for (int i = 0; i < nodeIDs.length; i++)
        {
            cbxNodeIDSelect.addItem((Integer) nodeIDs[i]);
        }
        cbxNodeIDSelect.setSelectedIndex(old);
    }

    private void updateEdgesDisplay()
    {
        txaEdges.setText(graph.printEdges());
        int old = cbxEdgeIDSelect.getSelectedIndex();
        cbxEdgeIDSelect.removeAllItems();
        int[] edgeIDs = graph.getEdgeIDs();
        for (int i = 0; i < edgeIDs.length; i++)
        {
            cbxEdgeIDSelect.addItem((Integer) edgeIDs[i]);
        }
        cbxEdgeIDSelect.setSelectedIndex(old);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddEdge;
    private javax.swing.JButton btnAddNode;
    private javax.swing.JButton btnConfig;
    private javax.swing.JButton btnMA;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdateEdge;
    private javax.swing.JButton btnUpdateNode;
    private javax.swing.JComboBox<String> cbNodeFieldSelect;
    private javax.swing.JComboBox<String> cbxEdgeFieldSelect;
    private javax.swing.JComboBox<Integer> cbxEdgeIDSelect;
    private javax.swing.JComboBox<Integer> cbxNodeIDSelect;
    private javax.swing.JComboBox<String> cbxType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblActionFeedback;
    private javax.swing.JLabel lblAddAction;
    private javax.swing.JLabel lblAddNode;
    private javax.swing.JLabel lblCookie;
    private javax.swing.JLabel lblCookieFeedback;
    private javax.swing.JLabel lblEdgeIDSelect;
    private javax.swing.JLabel lblEdgeNewValue;
    private javax.swing.JLabel lblEndID;
    private javax.swing.JLabel lblEndIDFeedback;
    private javax.swing.JLabel lblFieldSelect1;
    private javax.swing.JLabel lblForm;
    private javax.swing.JLabel lblFormFeedback;
    private javax.swing.JLabel lblJSON;
    private javax.swing.JLabel lblJSONFeedback;
    private javax.swing.JLabel lblNodeFieldSelect;
    private javax.swing.JLabel lblNodeIDSelect;
    private javax.swing.JLabel lblNodeNewValue;
    private javax.swing.JLabel lblProb;
    private javax.swing.JLabel lblProbFeedback;
    private javax.swing.JLabel lblStartID;
    private javax.swing.JLabel lblStartIDFeedback;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTitleAction;
    private javax.swing.JLabel lblTitleActionFeedback;
    private javax.swing.JLabel lblTitleFeedback;
    private javax.swing.JLabel lblType;
    private javax.swing.JLabel lblTypeFeedback;
    private javax.swing.JLabel lblURL;
    private javax.swing.JLabel lblURLFeedback;
    private javax.swing.JLabel lblUpdateEdge;
    private javax.swing.JLabel lblUpdateNode;
    private javax.swing.JLabel lbljson;
    private javax.swing.JLabel lbltxt;
    private javax.swing.JTextArea txaEdges;
    private javax.swing.JTextArea txaNodes;
    private javax.swing.JTextField txfCookie;
    private javax.swing.JTextField txfEdgeNewValue;
    private javax.swing.JTextField txfEnd;
    private javax.swing.JTextField txfFilename;
    private javax.swing.JTextField txfForm;
    private javax.swing.JTextField txfJSON;
    private javax.swing.JTextField txfMayan;
    private javax.swing.JTextField txfNodeNewValue;
    private javax.swing.JTextField txfProb;
    private javax.swing.JTextField txfStart;
    private javax.swing.JTextField txfTitleEdge;
    private javax.swing.JTextField txfTitleNode;
    private javax.swing.JTextField txfURL;
    // End of variables declaration//GEN-END:variables
}
